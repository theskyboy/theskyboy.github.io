<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-21T08:18:11.269Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/07/21/hello-world/"/>
    <id>http://yoursite.com/2019/07/21/hello-world/</id>
    <published>2019-07-21T08:18:11.268Z</published>
    <updated>2019-07-21T08:18:11.269Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>初学Reactd的注意</title>
    <link href="http://yoursite.com/2019/07/15/%E5%88%9D%E5%AD%A6Reactd%E7%9A%84%E6%B3%A8%E6%84%8F/"/>
    <id>http://yoursite.com/2019/07/15/初学Reactd的注意/</id>
    <published>2019-07-15T06:48:22.000Z</published>
    <updated>2019-07-26T07:07:26.850Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/.com//react.png" alt><br>1.在 JavaScript class 中，每次你定义其子类的构造函数时，都需要调用 super 方法<br>因此，在所有含有构造函数的的 React 组件中，构造函数必须以 super(props) 开头。</p><p>2.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onClick=&#123;() =&gt; alert(<span class="string">'click'</span>)&#125; </span><br><span class="line">onClick=&#123;<span class="function"><span class="title">function</span></span>() &#123; alert(<span class="string">'click'</span>); &#125;</span><br></pre></td></tr></table></figure><p>3.props是参数</p><p>4.有一个命名规范，通常会将代表事件的监听 prop 命名为 on[Event]，将处理事件的监听方法命名为 handle[Event] 这样的格式</p><p>5.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onClick=&#123;() =&gt; this.props.onClick()&#125;</span><br></pre></td></tr></table></figure><p>改成了更短的 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onClick=&#123;props.onClick&#125;</span><br></pre></td></tr></table></figure><p>6.我们强烈推荐，每次只要你构建动态列表的时候，都要指定一个合适的 key。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/.com//react.png&quot; alt&gt;&lt;br&gt;1.在 JavaScript class 中，每次你定义其子类的构造函数时，都需要调用 super 方法&lt;br&gt;因此，在所有含有构造函数的的 React 组件中，构造函数必须以 super(props)
      
    
    </summary>
    
      <category term="React教程" scheme="http://yoursite.com/categories/React%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
</feed>
